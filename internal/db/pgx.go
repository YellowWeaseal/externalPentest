package db

import (
	"errors"
	"externalPentest/internal/config"
	"fmt"
	logger "github.com/sirupsen/logrus"

	_ "github.com/jackc/pgx/v5"

	"github.com/linxGnu/mssqlx"
)

func NewPgx(cfg *config.TDb) (*mssqlx.DBs, error) {
	master, maskedMaster := cfg.GetMasterDSN()
	slave, maskedSlave := cfg.GetSlaveDSN()

	masterDSN := []string{master}
	slaveDSN := []string{slave}
	logger.Debug("initialized master DSN: %s and slave DSN: %s", maskedMaster, maskedSlave)

	db, errs := mssqlx.ConnectMasterSlaves("postgres", masterDSN, slaveDSN)
	if errors.Join(errs...) != nil {
		return nil, fmt.Errorf("got errors while connecting to database: %w", errors.Join(errs...))
	}
	logger.Debug("connected to database")

	db.SetMaxOpenConns(cfg.MaxOpenConns)
	db.SetMaxIdleConns(cfg.MaxIdleConns)
	db.SetConnMaxLifetime(cfg.ConnMaxLifetime)
	logger.Debug("set database config")

	if errs := db.Ping(); errors.Join(errs...) != nil {
		return nil, fmt.Errorf("got errors while pinging database: %w", errors.Join(errs...))
	}
	logger.Debug("successfully connected to database")
	return db, nil
}
